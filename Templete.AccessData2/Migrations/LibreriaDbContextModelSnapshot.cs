// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Template.AccessData2;

#nullable disable

namespace Template.AccessData2.Migrations
{
    [DbContext(typeof(LibreriaDbContext))]
    partial class LibreriaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Template.Domain2.Entities.Alquiler", b =>
                {
                    b.Property<int>("AlquileresId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlquileresId"), 1L, 1);

                    b.Property<int>("Cliente_idx")
                        .HasColumnType("int");

                    b.Property<int>("Estado_idx")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaAlquiler")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaDevolucion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaReserva")
                        .HasColumnType("datetime2");

                    b.Property<string>("ISBN_idx")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AlquileresId");

                    b.HasIndex("Cliente_idx");

                    b.HasIndex("Estado_idx");

                    b.HasIndex("ISBN_idx");

                    b.ToTable("Alquileres", (string)null);
                });

            modelBuilder.Entity("Template.Domain2.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente", (string)null);

                    b.HasData(
                        new
                        {
                            ClienteId = 1,
                            Apellido = "Dorrego",
                            DNI = "123456",
                            Email = "asd@hotmail.com",
                            Nombre = "Braian"
                        });
                });

            modelBuilder.Entity("Template.Domain2.Entities.EstadoDeAlquiler", b =>
                {
                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoId"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("EstadoId");

                    b.ToTable("EstadoDeAlquileres", (string)null);

                    b.HasData(
                        new
                        {
                            EstadoId = 1,
                            Descripcion = "Reservado"
                        },
                        new
                        {
                            EstadoId = 2,
                            Descripcion = "Alquilado"
                        },
                        new
                        {
                            EstadoId = 3,
                            Descripcion = "Cancelado"
                        });
                });

            modelBuilder.Entity("Template.Domain2.Entities.Libro", b =>
                {
                    b.Property<string>("ISBNId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Edicion")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Editorial")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Stock")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("ISBNId");

                    b.ToTable("Libros", (string)null);

                    b.HasData(
                        new
                        {
                            ISBNId = "9788893672573",
                            Autor = "J. K. Rowling",
                            Edicion = "Año de Edicion: 2017",
                            Editorial = "Magazzini Salani",
                            Imagen = "https://http2.mlstatic.com/D_NQ_NP_998415-MLA47726243958_102021-V.jpg",
                            Stock = 24,
                            Titulo = "Harry Potter y la Piedra Filosofal"
                        },
                        new
                        {
                            ISBNId = "9788426105134",
                            Autor = "Miguel de Cervantes",
                            Edicion = "Año de Edicion: 1605",
                            Editorial = "Mestas Ediciones",
                            Imagen = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSLAhuDxdCEH6S89mqvUI55Z5mD8e3W8E4UnQ&usqp=CAU",
                            Stock = 17,
                            Titulo = "Don Quijote De La Mancha"
                        },
                        new
                        {
                            ISBNId = "9789875669062",
                            Autor = "George Orwell",
                            Edicion = "Año de Edicion: 1945",
                            Editorial = "DEBOLS!LLO",
                            Imagen = "https://contentv2.tap-commerce.com/cover/large/9789875669062_1.jpg?id_com=1113",
                            Stock = 9,
                            Titulo = "Rebelión En La Granja - Debolsillo"
                        },
                        new
                        {
                            ISBNId = "9788416365166",
                            Autor = "Homero",
                            Edicion = "Año de Edicion: 1906-1935",
                            Editorial = "Mestas Ediciones",
                            Imagen = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR8zUlIPFtdj6g4-x5LEbsQRxOJ1htoQ5Fr9w&usqp=CAU",
                            Stock = 5,
                            Titulo = "Odisea"
                        },
                        new
                        {
                            ISBNId = "9789974748637",
                            Autor = "José Luis Inciarte",
                            Edicion = "Año de Edicion: 2017",
                            Editorial = "SUDAMERICANA",
                            Imagen = "https://m.media-amazon.com/images/I/51gSPaWeIHL.jpg",
                            Stock = 5,
                            Titulo = "Memorias De Los Andes"
                        },
                        new
                        {
                            ISBNId = "9789974903432",
                            Autor = "Diego Fischer",
                            Edicion = "Año de Edicion:2006",
                            Editorial = "SUDAMERICANA",
                            Imagen = "https://www.planetadelibros.com.ar/usuaris/libros/fotos/338/m_libros/portada_el-robo-de-la-historia_diego-fischer_202107011404.jpg",
                            Stock = 13,
                            Titulo = "El Robo De La Historia"
                        },
                        new
                        {
                            ISBNId = "9789974881891",
                            Autor = "Darwin Desbocatti",
                            Edicion = "Año de Edicion: 2017",
                            Editorial = "SUDAMERICANA",
                            Imagen = "https://i.gr-assets.com/images/S/compressed.photo.goodreads.com/books/1514618090l/37666512._SY475_.jpg",
                            Stock = 3,
                            Titulo = "No Es Digno, Pero Es Legal"
                        },
                        new
                        {
                            ISBNId = "9789915404752",
                            Autor = "Federico Lavagna",
                            Edicion = "Año de Edicion: 2011",
                            Editorial = "Edicion Del Autor",
                            Imagen = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSOv5FVmYrkoDfmKFsoiLRtrdj3dlf2WiWeTSKjXJ6OUZVDYaTApd5gj3-x76KpFP7Kfl4&usqp=CAU",
                            Stock = 1,
                            Titulo = "Cómo Jubilarte A Los 40"
                        },
                        new
                        {
                            ISBNId = "9789974907874",
                            Autor = "Haberkorn Leonardo",
                            Edicion = "Año de Edicion:2020",
                            Editorial = "Planeta",
                            Imagen = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQW3N7TRmp4vVK597UgzUrvscYtuN1DnoDLFOyV5V5Ki1-wE-17Bztc3pDWBsW8AfO9XFs&usqp=CAU",
                            Stock = 11,
                            Titulo = "Herencia Maldita Historias De Los Años Duros"
                        },
                        new
                        {
                            ISBNId = "9789974718456",
                            Autor = "Diego Zas",
                            Edicion = "Año de Edicion: 2021",
                            Editorial = "EDICIONES B",
                            Imagen = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT8SQ20DY4YDa0e9VzH7F7aOqLw3lBqWyu_nIa3CjsW5W8Qg9yK8i5SqR93h1eVVojAWwc&usqp=CAU",
                            Stock = 24,
                            Titulo = "Los 90"
                        });
                });

            modelBuilder.Entity("Template.Domain2.Entities.Alquiler", b =>
                {
                    b.HasOne("Template.Domain2.Entities.Cliente", "Cliente")
                        .WithMany("Alquileres")
                        .HasForeignKey("Cliente_idx")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Template.Domain2.Entities.EstadoDeAlquiler", "Estado")
                        .WithMany("Alquileres")
                        .HasForeignKey("Estado_idx")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Template.Domain2.Entities.Libro", "ISBN")
                        .WithMany("Alquileres")
                        .HasForeignKey("ISBN_idx")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Estado");

                    b.Navigation("ISBN");
                });

            modelBuilder.Entity("Template.Domain2.Entities.Cliente", b =>
                {
                    b.Navigation("Alquileres");
                });

            modelBuilder.Entity("Template.Domain2.Entities.EstadoDeAlquiler", b =>
                {
                    b.Navigation("Alquileres");
                });

            modelBuilder.Entity("Template.Domain2.Entities.Libro", b =>
                {
                    b.Navigation("Alquileres");
                });
#pragma warning restore 612, 618
        }
    }
}
